package view;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import model.bean.Cep;
import model.bean.Produto;
import model.bean.Usuario;
import model.dao.CepDAO;
import model.dao.ProdutoDAO;
import model.dao.UsuarioDAO;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author shouko3613
 */
public class CadastroView extends javax.swing.JFrame {

    /**
     * Creates new form CadView
     */
    public CadastroView() {
        initComponents();
        setTitle("Cadastro");
        setLocationRelativeTo(null);
        readProdTable();
        readUserTable();
        readCepTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TabbedPanel = new javax.swing.JTabbedPane();
        ProdPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ProdTable = new javax.swing.JTable();
        PanelProd = new javax.swing.JPanel();
        QtdProdLabel = new javax.swing.JLabel();
        QtdProdText = new javax.swing.JTextField();
        PriceProdLabel = new javax.swing.JLabel();
        PriceProdText = new javax.swing.JTextField();
        CancelProdButton = new javax.swing.JButton();
        DescProdLabel = new javax.swing.JLabel();
        DescProdText = new javax.swing.JTextField();
        NewProdButton = new javax.swing.JButton();
        EditProdButton = new javax.swing.JButton();
        DelProdButton = new javax.swing.JButton();
        UserPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        PanelUser = new javax.swing.JPanel();
        NameUserLabel = new javax.swing.JLabel();
        NameUserText = new javax.swing.JTextField();
        EmailUserLabel = new javax.swing.JLabel();
        EmailUserText = new javax.swing.JTextField();
        CancelUserButton = new javax.swing.JButton();
        PassUserLabel = new javax.swing.JLabel();
        PassUserText = new javax.swing.JPasswordField();
        CEPUserLabel = new javax.swing.JLabel();
        CEPUserText = new javax.swing.JTextField();
        CityUserLabel = new javax.swing.JLabel();
        CityUserText = new javax.swing.JTextField();
        UFUserLabel = new javax.swing.JLabel();
        UFUserText = new javax.swing.JComboBox<>();
        DistrictUserLabel = new javax.swing.JLabel();
        DistrictUserText = new javax.swing.JTextField();
        StreetUserLabel = new javax.swing.JLabel();
        StreetUserText = new javax.swing.JTextField();
        NewUserButton = new javax.swing.JButton();
        EditUserButton = new javax.swing.JButton();
        DelUserButton = new javax.swing.JButton();
        SearchUserText = new javax.swing.JTextField();
        SearchUserButton = new javax.swing.JButton();
        CepPanel = new javax.swing.JPanel();
        PanelCep = new javax.swing.JPanel();
        CancelCepButton = new javax.swing.JButton();
        CEPCepLabel = new javax.swing.JLabel();
        CEPCepText = new javax.swing.JTextField();
        CityCepLabel = new javax.swing.JLabel();
        CityCepText = new javax.swing.JTextField();
        UFCepLabel = new javax.swing.JLabel();
        UFCepText = new javax.swing.JComboBox<>();
        DistrictCepLabel = new javax.swing.JLabel();
        DistrictCepText = new javax.swing.JTextField();
        StreetCepLabel = new javax.swing.JLabel();
        StreetCepText = new javax.swing.JTextField();
        NewCepButton = new javax.swing.JButton();
        EditCepButton = new javax.swing.JButton();
        DelCepButton = new javax.swing.JButton();
        SearchCepText = new javax.swing.JTextField();
        SearchCepButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        CepTable = new javax.swing.JTable();
        HelloLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        AppBar = new javax.swing.JMenuBar();
        OptionsButtonBar = new javax.swing.JMenu();
        ExitButtonBar = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        CheckDarkTheme = new javax.swing.JCheckBoxMenuItem();
        CheckWhiteTheme = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ProdTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descrição", "QTD", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProdTable.setFocusTraversalPolicyProvider(true);
        ProdTable.setFocusable(false);
        ProdTable.setGridColor(new java.awt.Color(211, 211, 211));
        ProdTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProdTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(ProdTable);
        if (ProdTable.getColumnModel().getColumnCount() > 0) {
            ProdTable.getColumnModel().getColumn(0).setPreferredWidth(60);
            ProdTable.getColumnModel().getColumn(1).setPreferredWidth(250);
            ProdTable.getColumnModel().getColumn(2).setPreferredWidth(250);
            ProdTable.getColumnModel().getColumn(3).setPreferredWidth(80);
            ProdTable.getColumnModel().getColumn(3).setHeaderValue("Preço");
        }

        PanelProd.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados"));

        QtdProdLabel.setText("Qtd:");

        PriceProdLabel.setText("Preço:");

        CancelProdButton.setText("Cancelar");
        CancelProdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelProdButtonActionPerformed(evt);
            }
        });

        DescProdLabel.setText("Desc.:");

        javax.swing.GroupLayout PanelProdLayout = new javax.swing.GroupLayout(PanelProd);
        PanelProd.setLayout(PanelProdLayout);
        PanelProdLayout.setHorizontalGroup(
            PanelProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProdLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(QtdProdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(QtdProdText, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(PriceProdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PriceProdText, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(DescProdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DescProdText, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(PanelProdLayout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(CancelProdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelProdLayout.setVerticalGroup(
            PanelProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProdLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QtdProdLabel)
                    .addComponent(QtdProdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PriceProdLabel)
                    .addComponent(PriceProdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DescProdLabel)
                    .addComponent(DescProdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(CancelProdButton)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        NewProdButton.setText("Novo");
        NewProdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewProdButtonActionPerformed(evt);
            }
        });

        EditProdButton.setText("Editar");
        EditProdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditProdButtonActionPerformed(evt);
            }
        });

        DelProdButton.setText("Excluir");
        DelProdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelProdButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ProdPanelLayout = new javax.swing.GroupLayout(ProdPanel);
        ProdPanel.setLayout(ProdPanelLayout);
        ProdPanelLayout.setHorizontalGroup(
            ProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProdPanelLayout.createSequentialGroup()
                .addComponent(PanelProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(ProdPanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(NewProdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(EditProdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(DelProdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane5)
        );
        ProdPanelLayout.setVerticalGroup(
            ProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(ProdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewProdButton)
                    .addComponent(EditProdButton)
                    .addComponent(DelProdButton))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        TabbedPanel.addTab("Produtos", ProdPanel);

        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Email", "CEP", "Bairro", "Rua", "Cidade", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(UserTable);
        if (UserTable.getColumnModel().getColumnCount() > 0) {
            UserTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            UserTable.getColumnModel().getColumn(0).setHeaderValue("ID");
            UserTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            UserTable.getColumnModel().getColumn(1).setHeaderValue("Nome");
            UserTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            UserTable.getColumnModel().getColumn(2).setHeaderValue("Email");
            UserTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            UserTable.getColumnModel().getColumn(4).setPreferredWidth(100);
            UserTable.getColumnModel().getColumn(5).setPreferredWidth(100);
            UserTable.getColumnModel().getColumn(7).setHeaderValue("Estado");
        }

        PanelUser.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados"));

        NameUserLabel.setText("Nome:");

        NameUserText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NameUserTextKeyReleased(evt);
            }
        });

        EmailUserLabel.setText("Email:");

        EmailUserText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailUserTextActionPerformed(evt);
            }
        });
        EmailUserText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EmailUserTextKeyReleased(evt);
            }
        });

        CancelUserButton.setText("Cancelar");
        CancelUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelUserButtonActionPerformed(evt);
            }
        });

        PassUserLabel.setText("Senha:");

        CEPUserLabel.setText("CEP:");

        CityUserLabel.setText("Cidade:");

        CityUserText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityUserTextActionPerformed(evt);
            }
        });

        UFUserLabel.setText("UF:");

        UFUserText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um estado", "RO", "AC", "AM", "RR", "PA", "AP", "TO", "MA", "PI", "CE", "RN", "PB", "PE", "AL", "SE", "BA", "MG", "ES", "RJ", "SP", "PR", "SC", "RS", "MS", "MT", "GO", "DF" }));

        DistrictUserLabel.setText("Bairro:");

        StreetUserLabel.setText("Rua:");

        javax.swing.GroupLayout PanelUserLayout = new javax.swing.GroupLayout(PanelUser);
        PanelUser.setLayout(PanelUserLayout);
        PanelUserLayout.setHorizontalGroup(
            PanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUserLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(PanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelUserLayout.createSequentialGroup()
                        .addComponent(UFUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UFUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CancelUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelUserLayout.createSequentialGroup()
                        .addComponent(NameUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NameUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EmailUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(EmailUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(PassUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PassUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanelUserLayout.createSequentialGroup()
                        .addComponent(CEPUserLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CEPUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DistrictUserLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DistrictUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StreetUserLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StreetUserText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CityUserLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CityUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        PanelUserLayout.setVerticalGroup(
            PanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelUserLayout.createSequentialGroup()
                .addGroup(PanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameUserLabel)
                    .addComponent(NameUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailUserLabel)
                    .addComponent(EmailUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PassUserLabel)
                    .addComponent(PassUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CEPUserLabel)
                    .addComponent(CEPUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CityUserLabel)
                    .addComponent(CityUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DistrictUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DistrictUserLabel)
                    .addComponent(StreetUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StreetUserLabel))
                .addGroup(PanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelUserLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(CancelUserButton)
                        .addContainerGap())
                    .addGroup(PanelUserLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UFUserLabel)
                            .addComponent(UFUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        NewUserButton.setText("Novo");
        NewUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewUserButtonActionPerformed(evt);
            }
        });

        EditUserButton.setText("Editar");
        EditUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditUserButtonActionPerformed(evt);
            }
        });

        DelUserButton.setText("Excluir");
        DelUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelUserButtonActionPerformed(evt);
            }
        });

        SearchUserText.setToolTipText("Buscar um Email");
        SearchUserText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchUserTextKeyPressed(evt);
            }
        });

        SearchUserButton.setText("Buscar");
        SearchUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserPanelLayout = new javax.swing.GroupLayout(UserPanel);
        UserPanel.setLayout(UserPanelLayout);
        UserPanelLayout.setHorizontalGroup(
            UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(NewUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EditUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DelUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SearchUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
            .addComponent(jScrollPane6)
            .addComponent(PanelUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        UserPanelLayout.setVerticalGroup(
            UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewUserButton)
                    .addComponent(EditUserButton)
                    .addComponent(DelUserButton)
                    .addComponent(SearchUserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchUserButton))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        TabbedPanel.addTab("Usuarios", UserPanel);

        PanelCep.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados"));

        CancelCepButton.setText("Cancelar");
        CancelCepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelCepButtonActionPerformed(evt);
            }
        });

        CEPCepLabel.setText("CEP:");

        CityCepLabel.setText("Cidade:");

        CityCepText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityCepTextActionPerformed(evt);
            }
        });

        UFCepLabel.setText("UF:");

        UFCepText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um estado", "RO", "AC", "AM", "RR", "PA", "AP", "TO", "MA", "PI", "CE", "RN", "PB", "PE", "AL", "SE", "BA", "MG", "ES", "RJ", "SP", "PR", "SC", "RS", "MS", "MT", "GO", "DF" }));

        DistrictCepLabel.setText("Bairro:");

        StreetCepLabel.setText("Rua:");

        javax.swing.GroupLayout PanelCepLayout = new javax.swing.GroupLayout(PanelCep);
        PanelCep.setLayout(PanelCepLayout);
        PanelCepLayout.setHorizontalGroup(
            PanelCepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCepLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(PanelCepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCepLayout.createSequentialGroup()
                        .addComponent(CEPCepLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CEPCepText, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DistrictCepLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DistrictCepText, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StreetCepLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StreetCepText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CityCepLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CityCepText, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelCepLayout.createSequentialGroup()
                        .addGroup(PanelCepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelCepLayout.createSequentialGroup()
                                .addComponent(UFCepLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(UFCepText, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelCepLayout.createSequentialGroup()
                                .addGap(258, 258, 258)
                                .addComponent(CancelCepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelCepLayout.setVerticalGroup(
            PanelCepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCepLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CEPCepLabel)
                    .addComponent(CEPCepText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CityCepLabel)
                    .addComponent(CityCepText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DistrictCepText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DistrictCepLabel)
                    .addComponent(StreetCepText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StreetCepLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UFCepLabel)
                    .addComponent(UFCepText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CancelCepButton)
                .addContainerGap())
        );

        NewCepButton.setText("Novo");
        NewCepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewCepButtonActionPerformed(evt);
            }
        });

        EditCepButton.setText("Editar");
        EditCepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCepButtonActionPerformed(evt);
            }
        });

        DelCepButton.setText("Excluir");
        DelCepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelCepButtonActionPerformed(evt);
            }
        });

        SearchCepText.setToolTipText("Buscar um CEP");
        SearchCepText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchCepTextKeyPressed(evt);
            }
        });

        SearchCepButton.setText("Buscar");
        SearchCepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchCepButtonActionPerformed(evt);
            }
        });

        CepTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CEP", "Bairro", "Rua", "Cidade", "UF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CepTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CepTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(CepTable);
        if (CepTable.getColumnModel().getColumnCount() > 0) {
            CepTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            CepTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            CepTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        javax.swing.GroupLayout CepPanelLayout = new javax.swing.GroupLayout(CepPanel);
        CepPanel.setLayout(CepPanelLayout);
        CepPanelLayout.setHorizontalGroup(
            CepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CepPanelLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(NewCepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EditCepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DelCepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SearchCepText, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchCepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addComponent(jScrollPane7)
            .addComponent(PanelCep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CepPanelLayout.setVerticalGroup(
            CepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CepPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CepPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewCepButton)
                    .addComponent(EditCepButton)
                    .addComponent(DelCepButton)
                    .addComponent(SearchCepText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchCepButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        TabbedPanel.addTab("Cep", CepPanel);

        HelloLabel.setText("Olá");

        AppBar.setBackground(new java.awt.Color(211, 211, 211));
        AppBar.setToolTipText("");

        OptionsButtonBar.setText("Opções");
        OptionsButtonBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        OptionsButtonBar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OptionsButtonBar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        ExitButtonBar.setText("Sair");
        ExitButtonBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonBarActionPerformed(evt);
            }
        });
        OptionsButtonBar.add(ExitButtonBar);

        AppBar.add(OptionsButtonBar);

        jMenu1.setText("Tema");

        CheckDarkTheme.setText("Dark");
        CheckDarkTheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckDarkThemeActionPerformed(evt);
            }
        });
        jMenu1.add(CheckDarkTheme);

        CheckWhiteTheme.setSelected(true);
        CheckWhiteTheme.setText("White");
        CheckWhiteTheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckWhiteThemeActionPerformed(evt);
            }
        });
        jMenu1.add(CheckWhiteTheme);

        AppBar.add(jMenu1);

        setJMenuBar(AppBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPanel)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HelloLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HelloLabel)
                    .addComponent(NameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchUserButtonActionPerformed

        readSearchUserTable(SearchUserText.getText());

    }//GEN-LAST:event_SearchUserButtonActionPerformed

    private void SearchUserTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchUserTextKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){

            readSearchUserTable(SearchUserText.getText());

        }

    }//GEN-LAST:event_SearchUserTextKeyPressed

    private void DelUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelUserButtonActionPerformed

        if (UserTable.getSelectedRow() != -1) {

            //Delete Usuario
            Usuario user = new Usuario();
            UsuarioDAO userDao = new UsuarioDAO();

            user.setId((int) UserTable.getValueAt(UserTable.getSelectedRow(), 0));

            userDao.deleteUser(user);

            //Limpar campos apos exclusão dos dados
            NameUserText.setText("");
            EmailUserText.setText("");
            PassUserText.setText("");
            CEPUserText.setText("");
            DistrictUserText.setText("");
            StreetUserText.setText("");
            CityUserText.setText("");

            //Atualiza tabela
            readUserTable();

        } else {

            JOptionPane.showMessageDialog(null, "Selecione um usuario para ser excluido!");

        }
    }//GEN-LAST:event_DelUserButtonActionPerformed

    private void EditUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditUserButtonActionPerformed

        if (UserTable.getSelectedRow() != -1) {

            //Update Usuario
            Usuario user = new Usuario();
            UsuarioDAO userDao = new UsuarioDAO();

            user.setName(NameUserText.getText());
            user.setEmail(EmailUserText.getText());
            user.setCep(CEPUserText.getText());
            user.setBairro(DistrictUserText.getText());
            user.setRua(StreetUserText.getText());
            user.setCidade(CityUserText.getText());
            user.setEstado(UFUserText.getSelectedItem().toString());
            user.setId((int) UserTable.getValueAt(UserTable.getSelectedRow(), 0));

            userDao.updateUser(user);

            //Limpar campos apos atualização dos dados
            NameUserText.setText("");
            EmailUserText.setText("");
            PassUserText.setText("");
            CEPUserText.setText("");
            DistrictUserText.setText("");
            StreetUserText.setText("");
            CityUserText.setText("");

            //Atualiza tabela
            readUserTable();

        }
    }//GEN-LAST:event_EditUserButtonActionPerformed

    private void NewUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewUserButtonActionPerformed

        //Create Usuario
        Usuario user = new Usuario();
        UsuarioDAO userDao = new UsuarioDAO();

        if(!NameUserText.getText().trim().isEmpty() && !EmailUserText.getText().trim().isEmpty() && !PassUserText.getText().trim().isEmpty() && !CEPUserText.getText().trim().isEmpty() && !CityUserText.getText().trim().isEmpty() && !"Selecione um estado".equals(UFUserText.getSelectedItem().toString())){
            user.setName(NameUserText.getText());
            user.setEmail(EmailUserText.getText());
            user.setPassword(PassUserText.getText());
            user.setCep(CEPUserText.getText());
            user.setBairro(DistrictUserText.getText());
            user.setRua(StreetUserText.getText());
            user.setCidade(CityUserText.getText());
            user.setEstado(UFUserText.getSelectedItem().toString());

            userDao.createUser(user);

            //Limpar campos apos cadastro
            NameUserText.setText("");
            EmailUserText.setText("");
            PassUserText.setText("");
            CEPUserText.setText("");
            DistrictUserText.setText("");
            StreetUserText.setText("");
            CityUserText.setText("");

            //Adicionar novo produto a tabela
            readUserTable();
        } else {

            JOptionPane.showMessageDialog(null, "Preencha todos os campos");

        }
    }//GEN-LAST:event_NewUserButtonActionPerformed

    private void CancelUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelUserButtonActionPerformed

        //Limpar campos para cancelar a operação
        NameUserText.setText("");
        EmailUserText.setText("");
        PassUserText.setText("");
        CEPUserText.setText("");
        DistrictUserText.setText("");
        StreetUserText.setText("");
        CityUserText.setText("");
    }//GEN-LAST:event_CancelUserButtonActionPerformed

    private void UserTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTableMouseClicked
        //Transfere os dados da linha para a linha
        if (UserTable.getSelectedRow() != -1) {

            NameUserText.setText(UserTable.getValueAt(UserTable.getSelectedRow(), 1).toString());
            EmailUserText.setText(UserTable.getValueAt(UserTable.getSelectedRow(), 2).toString());
            CEPUserText.setText(UserTable.getValueAt(UserTable.getSelectedRow(), 3).toString());
            DistrictUserText.setText(UserTable.getValueAt(UserTable.getSelectedRow(), 4).toString());
            StreetUserText.setText(UserTable.getValueAt(UserTable.getSelectedRow(), 5).toString());
            CityUserText.setText(UserTable.getValueAt(UserTable.getSelectedRow(), 6).toString());
            UFUserText.setSelectedItem(UserTable.getValueAt(UserTable.getSelectedRow(), 7).toString());
        }
    }//GEN-LAST:event_UserTableMouseClicked

    private void DelProdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelProdButtonActionPerformed

        if (ProdTable.getSelectedRow() != -1) { 

            //Delete Produto
            Produto product = new Produto();
            ProdutoDAO productDao = new ProdutoDAO();

            product.setId((int) ProdTable.getValueAt(ProdTable.getSelectedRow(), 0));

            productDao.deleteProd(product);

            //Limpar campos apos exclusão dos dados
            DescProdText.setText("");
            QtdProdText.setText("");
            PriceProdText.setText("");

            //Atualiza tabela
            readProdTable();

        } else {

            JOptionPane.showMessageDialog(null, "Selecione um produto para ser excluido!");

        }
    }//GEN-LAST:event_DelProdButtonActionPerformed

    private void EditProdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditProdButtonActionPerformed

        if (ProdTable.getSelectedRow() != -1) {

            //Update Produto
            Produto product = new Produto();
            ProdutoDAO productDao = new ProdutoDAO();

            product.setDescription(DescProdText.getText());
            product.setQtd(Integer.parseInt(QtdProdText.getText()));
            product.setPrice(Double.parseDouble(PriceProdText.getText()));
            product.setId((int) ProdTable.getValueAt(ProdTable.getSelectedRow(), 0));

            productDao.updateProd(product);

            //Limpar campos apos atualização dos dados
            DescProdText.setText("");
            QtdProdText.setText("");
            PriceProdText.setText("");

            //Atualiza tabela
            readProdTable();

        }
    }//GEN-LAST:event_EditProdButtonActionPerformed

    private void NewProdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewProdButtonActionPerformed

        //Create Produto
        Produto product = new Produto();
        ProdutoDAO productDao = new ProdutoDAO();

        product.setDescription(DescProdText.getText());
        product.setQtd(Integer.parseInt(QtdProdText.getText()));
        product.setPrice(Double.parseDouble(PriceProdText.getText()));

        productDao.createProd(product);

        //Limpar campos apos cadastro
        DescProdText.setText("");
        QtdProdText.setText("");
        PriceProdText.setText("");

        //Adicionar novo produto a tabela
        readProdTable();
    }//GEN-LAST:event_NewProdButtonActionPerformed

    private void CancelProdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelProdButtonActionPerformed

        //Limpar campos para cancelar a operação
        DescProdText.setText("");
        QtdProdText.setText("");
        PriceProdText.setText("");
    }//GEN-LAST:event_CancelProdButtonActionPerformed

    private void ProdTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProdTableMouseClicked

        //Transfere os dados da linha para a linha
        if (ProdTable.getSelectedRow() != -1) {

            DescProdText.setText(ProdTable.getValueAt(ProdTable.getSelectedRow(), 1).toString());
            QtdProdText.setText(ProdTable.getValueAt(ProdTable.getSelectedRow(), 2).toString());
            PriceProdText.setText(ProdTable.getValueAt(ProdTable.getSelectedRow(), 3).toString());

        }
    }//GEN-LAST:event_ProdTableMouseClicked

    private void ExitButtonBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonBarActionPerformed
        new LoginView().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ExitButtonBarActionPerformed

    private void NameUserTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NameUserTextKeyReleased
        NameUserText.setText(maxlength(NameUserText.getText(), 50));
    }//GEN-LAST:event_NameUserTextKeyReleased

    private void EmailUserTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailUserTextKeyReleased
        EmailUserText.setText(maxlength(EmailUserText.getText(), 250));
    }//GEN-LAST:event_EmailUserTextKeyReleased

    private void CityUserTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityUserTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityUserTextActionPerformed

    private void EmailUserTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailUserTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailUserTextActionPerformed

    private void CancelCepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelCepButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CancelCepButtonActionPerformed

    private void CityCepTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityCepTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityCepTextActionPerformed

    private void DarkTheme(){
        //Panel
        AppBar.setBackground(Color.black);
        AppBar.setForeground(Color.white);
        TabbedPanel.setBackground(Color.black);
        ProdPanel.setBackground(Color.black);
        UserPanel.setBackground(Color.black);
        CepPanel.setBackground(Color.black);
        PanelProd.setBackground(Color.black);
        PanelUser.setBackground(Color.black);
        PanelUser.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Dados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        PanelProd.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Dados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        PanelCep.setBackground(Color.black);
        PanelCep.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Dados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(255, 255, 255))); // NOI18N
        
        //Produtos Dark Theme
        QtdProdLabel.setForeground(Color.white);
        QtdProdText.setBackground(Color.black);
        QtdProdText.setForeground(Color.white);

        PriceProdLabel.setForeground(Color.white);
        PriceProdText.setBackground(Color.black);
        PriceProdText.setForeground(Color.white);

        DescProdLabel.setForeground(Color.white);
        DescProdText.setBackground(Color.black);
        DescProdText.setForeground(Color.white);

        CancelProdButton.setBackground(Color.black);
        CancelProdButton.setForeground(Color.white);

        NewProdButton.setBackground(Color.black);
        NewProdButton.setForeground(Color.white);

        EditProdButton.setBackground(Color.black);
        EditProdButton.setForeground(Color.white);

        DelProdButton.setBackground(Color.black);
        DelProdButton.setForeground(Color.white);

        //User Dark Theme
        NameUserLabel.setForeground(Color.white);
        NameUserText.setBackground(Color.black);
        NameUserText.setForeground(Color.white);

        EmailUserLabel.setForeground(Color.white);
        EmailUserText.setBackground(Color.black);
        EmailUserText.setForeground(Color.white);

        PassUserLabel.setForeground(Color.white);
        PassUserText.setBackground(Color.black);
        PassUserText.setForeground(Color.white);

        CEPUserLabel.setForeground(Color.white);
        CEPUserText.setBackground(Color.black);
        CEPUserText.setForeground(Color.white);

        DistrictUserText.setForeground(Color.white);
        DistrictUserText.setBackground(Color.black);
        DistrictUserText.setForeground(Color.white);

        StreetUserLabel.setForeground(Color.white);
        StreetUserText.setBackground(Color.black);
        StreetUserText.setForeground(Color.white);

        CityUserLabel.setForeground(Color.white);
        CityUserText.setBackground(Color.black);
        CityUserText.setForeground(Color.white);

        UFUserLabel.setForeground(Color.white);
        //UFUserText.setBackground(Color.black);
        UFUserText.setForeground(Color.white);

        CancelUserButton.setBackground(Color.black);
        CancelUserButton.setForeground(Color.white);

        NewUserButton.setBackground(Color.black);
        NewUserButton.setForeground(Color.white);

        EditUserButton.setBackground(Color.black);
        EditUserButton.setForeground(Color.white);

        DelUserButton.setBackground(Color.black);
        DelUserButton.setForeground(Color.white);

        SearchUserText.setBackground(Color.black);
        SearchUserText.setForeground(Color.white);
        SearchUserButton.setBackground(Color.black);
        SearchUserButton.setForeground(Color.white);
        
        //Cep Dark Theme
        CEPCepLabel.setForeground(Color.white);
        CEPCepText.setBackground(Color.black);
        CEPCepText.setForeground(Color.white);

        DistrictCepText.setForeground(Color.white);
        DistrictCepText.setBackground(Color.black);
        DistrictCepText.setForeground(Color.white);

        StreetCepLabel.setForeground(Color.white);
        StreetCepText.setBackground(Color.black);
        StreetCepText.setForeground(Color.white);

        CityCepLabel.setForeground(Color.white);
        CityCepText.setBackground(Color.black);
        CityCepText.setForeground(Color.white);

        UFCepLabel.setForeground(Color.white);
        //UFCepText.setBackground(Color.black);
        UFCepText.setForeground(Color.white);

        CancelCepButton.setBackground(Color.black);
        CancelCepButton.setForeground(Color.white);

        NewCepButton.setBackground(Color.black);
        NewCepButton.setForeground(Color.white);

        EditCepButton.setBackground(Color.black);
        EditCepButton.setForeground(Color.white);

        DelCepButton.setBackground(Color.black);
        DelCepButton.setForeground(Color.white);

        SearchCepText.setBackground(Color.black);
        SearchCepText.setForeground(Color.white);
        SearchCepButton.setBackground(Color.black);
        SearchCepButton.setForeground(Color.white);
    }
    
    private void WhiteTheme(){
        //Panel
        AppBar.setBackground(Color.white);
        AppBar.setForeground(Color.black);
        TabbedPanel.setBackground(Color.white);
        ProdPanel.setBackground(Color.white);
        UserPanel.setBackground(Color.white);
        CepPanel.setBackground(Color.white);
        PanelProd.setBackground(Color.white);
        PanelUser.setBackground(Color.white);
        PanelUser.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(0, 0, 0))); // NOI18N
        PanelProd.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(0, 0, 0))); // NOI18N
        PanelCep.setBackground(Color.white);
        PanelCep.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Sans", 0, 15), new java.awt.Color(0, 0, 0))); // NOI18N
        
        //Produtos White Theme
        QtdProdLabel.setForeground(Color.black);
        QtdProdText.setBackground(Color.white);
        QtdProdText.setForeground(Color.black);

        PriceProdLabel.setForeground(Color.black);
        PriceProdText.setBackground(Color.white);
        PriceProdText.setForeground(Color.black);

        DescProdLabel.setForeground(Color.black);
        DescProdText.setBackground(Color.white);
        DescProdText.setForeground(Color.black);

        CancelProdButton.setBackground(Color.white);
        CancelProdButton.setForeground(Color.black);

        NewProdButton.setBackground(Color.white);
        NewProdButton.setForeground(Color.black);

        EditProdButton.setBackground(Color.white);
        EditProdButton.setForeground(Color.black);

        DelProdButton.setBackground(Color.white);
        DelProdButton.setForeground(Color.black);

        //User White Theme
        NameUserLabel.setForeground(Color.black);
        NameUserText.setBackground(Color.white);
        NameUserText.setForeground(Color.black);

        EmailUserLabel.setForeground(Color.black);
        EmailUserText.setBackground(Color.white);
        EmailUserText.setForeground(Color.black);

        PassUserLabel.setForeground(Color.black);
        PassUserText.setBackground(Color.white);
        PassUserText.setForeground(Color.black);

        CEPUserLabel.setForeground(Color.black);
        CEPUserText.setBackground(Color.white);
        CEPUserText.setForeground(Color.black);

        DistrictUserText.setForeground(Color.black);
        DistrictUserText.setBackground(Color.white);
        DistrictUserText.setForeground(Color.black);

        StreetUserLabel.setForeground(Color.black);
        StreetUserText.setBackground(Color.white);
        StreetUserText.setForeground(Color.black);

        CityUserLabel.setForeground(Color.black);
        CityUserText.setBackground(Color.white);
        CityUserText.setForeground(Color.black);

        UFUserLabel.setForeground(Color.black);
        //UFUserText.setBackground(Color.white);
        UFUserText.setForeground(Color.black);

        CancelUserButton.setBackground(Color.white);
        CancelUserButton.setForeground(Color.black);

        NewUserButton.setBackground(Color.white);
        NewUserButton.setForeground(Color.black);

        EditUserButton.setBackground(Color.white);
        EditUserButton.setForeground(Color.black);

        DelUserButton.setBackground(Color.white);
        DelUserButton.setForeground(Color.black);

        SearchUserText.setBackground(Color.white);
        SearchUserText.setForeground(Color.black);
        SearchUserButton.setBackground(Color.white);
        SearchUserButton.setForeground(Color.black);
        
        //Cep white theme
        CEPCepLabel.setForeground(Color.black);
        CEPCepText.setBackground(Color.white);
        CEPCepText.setForeground(Color.black);

        DistrictCepText.setForeground(Color.black);
        DistrictCepText.setBackground(Color.white);
        DistrictCepText.setForeground(Color.black);

        StreetCepLabel.setForeground(Color.black);
        StreetCepText.setBackground(Color.white);
        StreetCepText.setForeground(Color.black);

        CityCepLabel.setForeground(Color.black);
        CityCepText.setBackground(Color.white);
        CityCepText.setForeground(Color.black);

        UFCepLabel.setForeground(Color.black);
        //UFCepText.setBackground(Color.white);
        UFCepText.setForeground(Color.black);

        CancelCepButton.setBackground(Color.white);
        CancelCepButton.setForeground(Color.black);

        NewCepButton.setBackground(Color.white);
        NewCepButton.setForeground(Color.black);

        EditCepButton.setBackground(Color.white);
        EditCepButton.setForeground(Color.black);

        DelCepButton.setBackground(Color.white);
        DelCepButton.setForeground(Color.black);

        SearchCepText.setBackground(Color.white);
        SearchCepText.setForeground(Color.black);
        SearchCepButton.setBackground(Color.white);
        SearchCepButton.setForeground(Color.black);
    }
    
    private void CheckDarkThemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckDarkThemeActionPerformed
        if(CheckWhiteTheme.isSelected()){
            CheckWhiteTheme.setSelected(false);
        }
        if(CheckDarkTheme.isSelected()){
            this.DarkTheme();
        }
    }//GEN-LAST:event_CheckDarkThemeActionPerformed

    private void CheckWhiteThemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckWhiteThemeActionPerformed
        if(CheckDarkTheme.isSelected()){
            CheckDarkTheme.setSelected(false);
        }
        if(CheckWhiteTheme.isSelected()){
            this.WhiteTheme();
        }
    }//GEN-LAST:event_CheckWhiteThemeActionPerformed

    private void NewCepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewCepButtonActionPerformed
        //Create Usuario
        Cep cep = new Cep();
        CepDAO cepDao = new CepDAO();

        if(!CEPCepText.getText().trim().isEmpty() && !CityCepText.getText().trim().isEmpty() && !"Selecione um estado".equals(UFCepText.getSelectedItem().toString())){
            cep.setCep(CEPCepText.getText());
            cep.setBairro(DistrictCepText.getText());
            cep.setRua(StreetCepText.getText());
            cep.setCidade(CityCepText.getText());
            cep.setUf(UFCepText.getSelectedItem().toString());

            cepDao.createCep(cep);

            //Limpar campos apos cadastro
            CEPCepText.setText("");
            DistrictCepText.setText("");
            StreetCepText.setText("");
            CityCepText.setText("");

            //Adicionar novo Cep a tabela
            readCepTable();
        } else {

            JOptionPane.showMessageDialog(null, "Preencha todos os campos");

        }
    }//GEN-LAST:event_NewCepButtonActionPerformed

    private void EditCepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCepButtonActionPerformed
       if (CepTable.getSelectedRow() != -1) {

            //Update Usuario
            Cep cep = new Cep();
            CepDAO cepDao = new CepDAO();

            cep.setCep(CEPCepText.getText());
            cep.setBairro(DistrictCepText.getText());
            cep.setRua(StreetCepText.getText());
            cep.setCidade(CityCepText.getText());
            cep.setUf(UFCepText.getSelectedItem().toString());
            cep.setId((int) CepTable.getValueAt(CepTable.getSelectedRow(), 0));

            cepDao.updateCep(cep);

            //Limpar campos apos atualização dos dados
            CEPCepText.setText("");
            DistrictCepText.setText("");
            StreetCepText.setText("");
            CityCepText.setText("");

            //Atualiza tabela
            readCepTable();

        }
    }//GEN-LAST:event_EditCepButtonActionPerformed

    private void DelCepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelCepButtonActionPerformed
        if (CepTable.getSelectedRow() != -1) {

            //Delete Cep
            Cep cep = new Cep();
            CepDAO cepDao = new CepDAO();

            cep.setId((int) CepTable.getValueAt(CepTable.getSelectedRow(), 0));

            cepDao.deleteCep(cep);

            //Limpar campos apos exclusão dos dados
            CEPCepText.setText("");
            DistrictCepText.setText("");
            StreetCepText.setText("");
            CityCepText.setText("");

            //Atualiza tabela
            readCepTable();

        } else {

            JOptionPane.showMessageDialog(null, "Selecione um CEP para ser excluido!");

        }
    }//GEN-LAST:event_DelCepButtonActionPerformed

    private void SearchCepTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchCepTextKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){

            readSearchCepTable(SearchCepText.getText());

        }
    }//GEN-LAST:event_SearchCepTextKeyPressed

    private void SearchCepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchCepButtonActionPerformed
       readSearchCepTable(SearchCepText.getText());
    }//GEN-LAST:event_SearchCepButtonActionPerformed

    private void CepTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CepTableMouseClicked
        //Transfere os dados da linha para a linha
        if (CepTable.getSelectedRow() != -1) {

            CEPCepText.setText(CepTable.getValueAt(CepTable.getSelectedRow(), 1).toString());
            DistrictCepText.setText(CepTable.getValueAt(CepTable.getSelectedRow(), 2).toString());
            StreetCepText.setText(CepTable.getValueAt(CepTable.getSelectedRow(), 3).toString());
            CityCepText.setText(CepTable.getValueAt(CepTable.getSelectedRow(), 4).toString());
            UFCepText.setSelectedItem(CepTable.getValueAt(CepTable.getSelectedRow(), 5).toString());
        }
    }//GEN-LAST:event_CepTableMouseClicked

    public static String maxlength(String str, int maxValue){
        String value = str;
        if(str.length() > maxValue){
            JOptionPane.showMessageDialog(null, "Quantidade maxima atingida!");
            value = str.substring(0, maxValue);
        }
        return value;
    }
    
    public void readProdTable() {

        DefaultTableModel modelo = (DefaultTableModel) ProdTable.getModel();
        modelo.setNumRows(0);

        ProdutoDAO productDao = new ProdutoDAO();

        productDao.listProd().forEach(p -> {
            modelo.addRow(new Object[]{
                p.getId(),
                p.getDescription(),
                p.getQtd(),
                p.getPrice()
            });
        });

    }

    public void readUserTable() {

        DefaultTableModel modelo = (DefaultTableModel) UserTable.getModel();
        modelo.setNumRows(0);

        UsuarioDAO userDao = new UsuarioDAO();

        userDao.listUser().forEach(u -> {
            modelo.addRow(new Object[]{
                u.getId(),
                u.getName(),
                u.getEmail(),
                u.getCep(),
                u.getBairro(),
                u.getRua(),
                u.getCidade(),
                u.getEstado()
            });
        });

    }

    public void readSearchUserTable(String email) {

        DefaultTableModel modelo = (DefaultTableModel) UserTable.getModel();
        modelo.setNumRows(0);

        UsuarioDAO userDao = new UsuarioDAO();

        userDao.searchUser(email).forEach(u -> {
            modelo.addRow(new Object[]{
                u.getId(),
                u.getName(),
                u.getEmail(),
                u.getCep(),
                u.getBairro(),
                u.getRua(),
                u.getCidade(),
                u.getEstado()
            });
        });

    }
    
    public void readCepTable() {

        DefaultTableModel modelo = (DefaultTableModel) CepTable.getModel();
        modelo.setNumRows(0);

        CepDAO cepDao = new CepDAO();

        cepDao.listCep().forEach(c -> {
            modelo.addRow(new Object[]{
                c.getId(),
                c.getCep(),
                c.getBairro(),
                c.getRua(),
                c.getCidade(),
                c.getUf()
            });
        });

    }

    public void readSearchCepTable(String cep) {

        DefaultTableModel modelo = (DefaultTableModel) CepTable.getModel();
        modelo.setNumRows(0);

        CepDAO cepDao = new CepDAO();

        cepDao.searchCep(cep).forEach(c -> {
            modelo.addRow(new Object[]{
                c.getId(),
                c.getCep(),
                c.getBairro(),
                c.getRua(),
                c.getCidade(),
                c.getUf()
            });
        });

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar AppBar;
    private javax.swing.JLabel CEPCepLabel;
    private javax.swing.JTextField CEPCepText;
    private javax.swing.JLabel CEPUserLabel;
    private javax.swing.JTextField CEPUserText;
    private javax.swing.JButton CancelCepButton;
    private javax.swing.JButton CancelProdButton;
    private javax.swing.JButton CancelUserButton;
    private javax.swing.JPanel CepPanel;
    private javax.swing.JTable CepTable;
    private javax.swing.JCheckBoxMenuItem CheckDarkTheme;
    private javax.swing.JCheckBoxMenuItem CheckWhiteTheme;
    private javax.swing.JLabel CityCepLabel;
    private javax.swing.JTextField CityCepText;
    private javax.swing.JLabel CityUserLabel;
    private javax.swing.JTextField CityUserText;
    private javax.swing.JButton DelCepButton;
    private javax.swing.JButton DelProdButton;
    private javax.swing.JButton DelUserButton;
    private javax.swing.JLabel DescProdLabel;
    private javax.swing.JTextField DescProdText;
    private javax.swing.JLabel DistrictCepLabel;
    private javax.swing.JTextField DistrictCepText;
    private javax.swing.JLabel DistrictUserLabel;
    private javax.swing.JTextField DistrictUserText;
    private javax.swing.JButton EditCepButton;
    private javax.swing.JButton EditProdButton;
    private javax.swing.JButton EditUserButton;
    private javax.swing.JLabel EmailUserLabel;
    private javax.swing.JTextField EmailUserText;
    private javax.swing.JMenuItem ExitButtonBar;
    private javax.swing.JLabel HelloLabel;
    public javax.swing.JLabel NameLabel;
    private javax.swing.JLabel NameUserLabel;
    private javax.swing.JTextField NameUserText;
    private javax.swing.JButton NewCepButton;
    private javax.swing.JButton NewProdButton;
    private javax.swing.JButton NewUserButton;
    private javax.swing.JMenu OptionsButtonBar;
    private javax.swing.JPanel PanelCep;
    private javax.swing.JPanel PanelProd;
    private javax.swing.JPanel PanelUser;
    private javax.swing.JLabel PassUserLabel;
    private javax.swing.JPasswordField PassUserText;
    private javax.swing.JLabel PriceProdLabel;
    private javax.swing.JTextField PriceProdText;
    private javax.swing.JPanel ProdPanel;
    private javax.swing.JTable ProdTable;
    private javax.swing.JLabel QtdProdLabel;
    private javax.swing.JTextField QtdProdText;
    private javax.swing.JButton SearchCepButton;
    private javax.swing.JTextField SearchCepText;
    private javax.swing.JButton SearchUserButton;
    private javax.swing.JTextField SearchUserText;
    private javax.swing.JLabel StreetCepLabel;
    private javax.swing.JTextField StreetCepText;
    private javax.swing.JLabel StreetUserLabel;
    private javax.swing.JTextField StreetUserText;
    private javax.swing.JTabbedPane TabbedPanel;
    private javax.swing.JLabel UFCepLabel;
    private javax.swing.JComboBox<String> UFCepText;
    private javax.swing.JLabel UFUserLabel;
    private javax.swing.JComboBox<String> UFUserText;
    private javax.swing.JPanel UserPanel;
    private javax.swing.JTable UserTable;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    // End of variables declaration//GEN-END:variables
}
